<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">


    <xacro:include filename="$(find mobo_bot_description)/urdf/other_parts/box_with_fillet_macro.xacro"/>
    <xacro:include filename="$(find mobo_bot_description)/urdf/other_parts/drive_wheel_macro.xacro"/>
    <xacro:include filename="$(find mobo_bot_description)/urdf/other_parts/drive_wheel_rim_macro.xacro"/>
    
    <xacro:include filename="$(find mobo_bot_description)/urdf/sensors/sonar.xacro"/>
    <xacro:include filename="$(find mobo_bot_description)/urdf/sensors/lidar.xacro"/>
    <xacro:include filename="$(find mobo_bot_description)/urdf/sensors/imu.xacro"/>
    <xacro:include filename="$(find mobo_bot_description)/urdf/sensors/cam.xacro"/>

    <xacro:property name="chassis_length" value="0.21"/>
    <xacro:property name="chassis_width" value="0.21"/>
    <xacro:property name="chassis_height" value="0.06"/>
    <xacro:property name="slab_height" value="0.005"/>
    <xacro:property name="chassis_mass" value="2.0"/>
    <xacro:property name="chassis_color" value="orange"/>

    <xacro:property name="wheel_seperation" value="0.23"/>
    <xacro:property name="wheel_radius" value="0.034"/>
    <xacro:property name="wheel_width" value="0.014"/>
    <xacro:property name="wheel_mass" value="0.08"/>

    <xacro:property name="castor_wheel_radius" value="${wheel_radius}"/>
    <xacro:property name="castor_wheel_mass" value="0.08"/>

    




    <!-- BASE LINK -->

    <!-- <base joint/> -->
    <link name="base_link">  
    </link>

    <!-- ################# -->






    <!-- CHASSIS LINK -->

    <joint name="chassis_joint" type="fixed">
        <parent link="base_link"/>
        <child link="chassis"/>
        <origin xyz="0 0 ${wheel_radius}"/>
    </joint>

    <link name="chassis">
        <xacro:insert_box_with_fillet x="-0.025" y="0" z="0" 
            size_x="${chassis_length}" size_y="${chassis_width}" size_z="${slab_height}" 
            fillet_radius="0.04"/>
        <xacro:insert_box_with_fillet x="-0.025" y="0" z="${chassis_height}" 
            size_x="${chassis_length}" size_y="${chassis_width}" size_z="${slab_height}" 
            fillet_radius="0.04"/>

        <visual>
            <origin xyz="0.05 0.08 ${chassis_height/2}" rpy="0 0 0"/>
            <geometry>
                <cylinder radius="0.005" length="${chassis_height}"/>
            </geometry>
            <material name="DarkBlue">
              <color rgba="0.09 0.30 0.46 1.0"/>
            </material>
        </visual>
        <visual>
            <origin xyz="0.05 -0.08 ${chassis_height/2}" rpy="0 0 0"/>
            <geometry>
                <cylinder radius="0.005" length="${chassis_height}"/>
            </geometry>
            <material name="DarkBlue">
              <color rgba="0.09 0.30 0.46 1.0"/>
            </material>
        </visual>

        <visual>
            <origin xyz="-0.1 0.08 ${chassis_height/2}" rpy="0 0 0"/>
            <geometry>
                <cylinder radius="0.005" length="${chassis_height}"/>
            </geometry>
            <material name="DarkBlue">
              <color rgba="0.09 0.30 0.46 1.0"/>
            </material>
        </visual>
        <visual>
            <origin xyz="-0.1 -0.08 ${chassis_height/2}" rpy="0 0 0"/>
            <geometry>
                <cylinder radius="0.005" length="${chassis_height}"/>
            </geometry>
            <material name="DarkBlue">
              <color rgba="0.09 0.30 0.46 1.0"/>
            </material>
        </visual>

        <collision>
           <origin xyz="-0.02 0 ${chassis_height/2}" rpy="0 0 0"/>
            <geometry>
                <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
            </geometry>
        </collision>
        <xacro:inertial_box mass="${chassis_mass}" x="${chassis_length}" y="${chassis_width}" z="${chassis_height}">
            <origin xyz="-0.04 0 ${chassis_height/2}" rpy="0 0 0"/>
        </xacro:inertial_box>
    </link>
    
    <!--  ########################### -->










    <!-- LEFT DRIVE WHEEL -->

    <xacro:insert_drive_wheel 
        base_name="left_wheel" 
        parent_name="base_link" 
        x="0" y="${wheel_seperation/2}" z="${wheel_radius}"
        mass="${wheel_mass}"
        radius="${wheel_radius}"
        thickness="${wheel_width}"/>

    <xacro:if value="$(arg use_simulation)">
        <gazebo reference="left_wheel">
            <mu1>1.0</mu1>
            <mu2>1.0</mu2>
        </gazebo>
    </xacro:if>


    <xacro:insert_drive_wheel_rim
        base_name="left_rim" 
        parent_name="left_wheel" 
        radius="${wheel_radius}"
        thickness="${wheel_width}"
        spoke_width="0.005"/>

    <!-- ############################# -->








    <!-- RIGHT DRIVE WHEEL -->

    <xacro:insert_drive_wheel 
        base_name="right_wheel" 
        parent_name="base_link" 
        x="0" y="${-wheel_seperation/2}" z="${wheel_radius}"
        mass="${wheel_mass}"
        radius="${wheel_radius}"
        thickness="${wheel_width}"/>
    
    <xacro:if value="$(arg use_simulation)">
        <gazebo reference="right_wheel">
            <mu1>1.0</mu1>
            <mu2>1.0</mu2>
        </gazebo>
    </xacro:if>


    <xacro:insert_drive_wheel_rim
        base_name="right_rim" 
        parent_name="right_wheel" 
        radius="${wheel_radius}"
        thickness="${wheel_width}"
        spoke_width="0.005"/>

    <!-- ############################# -->









    <!--  castor WHEEL LINK -->

    <joint name="castor_wheel_joint" type="fixed">
        <parent link="base_link"/>
        <child link="castor_wheel"/>
        <origin xyz="-0.095 0 ${castor_wheel_radius/2}"/>
    </joint>


    <link name="castor_wheel">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <sphere radius="${castor_wheel_radius/2}" />
            </geometry>
            <material name="grey">
                <color rgba="0.25 0.25 0.25 1"/>
            </material>
        </visual>
        <collision>
           <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <sphere radius="${castor_wheel_radius/2}" />
            </geometry>
        </collision>
        <xacro:inertial_sphere mass="${castor_wheel_mass}" radius="${castor_wheel_radius/2}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_sphere>
    </link>

    <xacro:if value="$(arg use_simulation)">
        <gazebo reference="castor_wheel">
            <mu1>0.001</mu1>
            <mu2>0.001</mu2>
        </gazebo>
    </xacro:if>

    <!--  ########################### -->
        



    
     <!--  lidar -->
    <xacro:property name="lidar_z_offset" value="0.04"/>
    <xacro:insert_lidar 
        base_name="lidar" 
        parent_name="chassis" 
        x="0.01" y="0" z="${chassis_height+lidar_z_offset}"
        mass="0.1"/>

    <xacro:if value="$(arg use_simulation)">
      <gazebo reference="lidar">
        <sensor name="lidar" type="gpu_lidar">
          <pose> 0 0 0 0 0 0 </pose>
          <ignition_frame_id>lidar</ignition_frame_id>
          <topic>lidar/scan</topic>
          <always_on>true</always_on>
          <visualize>true</visualize>
          <update_rate>10</update_rate>
          <ray>
            <scan>
                <horizontal>
                    <samples>360</samples>
                    <min_angle>${-pi*2}</min_angle>
                    <max_angle>${pi*2}</max_angle>
                </horizontal>
            </scan>
            <range>
                <min>0.1</min>
                <max>10.0</max>
            </range>
          </ray>
        </sensor>
      </gazebo>
    </xacro:if>

    

    <!--  imu -->
    <xacro:insert_imu
        base_name="imu" 
        parent_name="chassis" 
        x="0" y="0" z="${chassis_height}"/>

    <xacro:if value="$(arg use_simulation)">
          <gazebo reference="imu">
            <sensor name="imu" type="imu">
              <ignition_frame_id>imu</ignition_frame_id>
              <plugin filename="ignition-gazebo-imu-system" name="ignition::gazebo::systems::Imu">
              </plugin>

              <topic>imu/data</topic>
              <always_on>true</always_on>
              <update_rate>10</update_rate>
              <visualize>true</visualize>
              <imu>
                <angular_velocity>
                  <x>
                    <noise type="gaussian">
                      <mean>0.0</mean>
                      <stddev>2e-4</stddev>
                      <bias_mean>0.0000075</bias_mean>
                      <bias_stddev>0.0000008</bias_stddev>
                    </noise>
                  </x>
                  <y>
                    <noise type="gaussian">
                      <mean>0.0</mean>
                      <stddev>2e-4</stddev>
                      <bias_mean>0.0000075</bias_mean>
                      <bias_stddev>0.0000008</bias_stddev>
                    </noise>
                  </y>
                  <z>
                    <noise type="gaussian">
                      <mean>0.0</mean>
                      <stddev>2e-4</stddev>
                      <bias_mean>0.0000075</bias_mean>
                      <bias_stddev>0.0000008</bias_stddev>
                    </noise>
                  </z>
                </angular_velocity>
                <linear_acceleration>
                  <x>
                    <noise type="gaussian">
                      <mean>0.0</mean>
                      <stddev>1.7e-2</stddev>
                      <bias_mean>0.1</bias_mean>
                      <bias_stddev>0.001</bias_stddev>
                    </noise>
                  </x>
                  <y>
                    <noise type="gaussian">
                      <mean>0.0</mean>
                      <stddev>1.7e-2</stddev>
                      <bias_mean>0.1</bias_mean>
                      <bias_stddev>0.001</bias_stddev>
                    </noise>
                  </y>
                  <z>
                    <noise type="gaussian">
                      <mean>0.0</mean>
                      <stddev>1.7e-2</stddev>
                      <bias_mean>0.1</bias_mean>
                      <bias_stddev>0.001</bias_stddev>
                    </noise>
                  </z>
                </linear_acceleration>
              </imu>
            </sensor>
        </gazebo>     
    </xacro:if>



    <!--  sonar -->
    <xacro:insert_sonar
        base_name="sonar" 
        parent_name="chassis" 
        x="0.0825" y="0" z="${chassis_height/6}"
        mass="0.005"/>


    <!-- camera -->
    <xacro:property name="cam_x_offset" value="0.015"/>
    <xacro:property name="cam_z_offset" value="0.01"/>
    <xacro:insert_camera
        base_name="camera" 
        parent_name="chassis" 
        x="${0.08+cam_x_offset}" y="0" z="${chassis_height}"
        mass="0.005" tilt_angle="0.00"/> 

    <!-- <ignition_frame_id>camera_optical_link</ignition_frame_id> -->

    <!-- <xacro:if value="$(arg use_simulation)">
        <gazebo reference="camera_optical_link">
          <sensor name="camera" type="camera">
            <camera>
              <horizontal_fov>1.047</horizontal_fov>
              <image>
                <width>320</width>
                <height>240</height>
              </image>
              <clip>
                <near>0.1</near>
                <far>100</far>
              </clip>
            </camera>
            <always_on>1</always_on>
            <update_rate>30</update_rate>
            <visualize>true</visualize>
            <topic>camera</topic>
            <enable_metrics>true</enable_metrics>
          </sensor>
        </gazebo>
    </xacro:if> -->

</robot>